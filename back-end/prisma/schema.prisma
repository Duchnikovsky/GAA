// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// datasource db {
//   provider          = "postgresql"
//   url               = env("POSTGRES_PRISMA_URL")
//   directUrl         = env("POSTGRES_URL_NON_POOLING")
//   shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
// }

model User {
  id       String    @id @default(uuid())
  email    String    @unique
  Role     Role      @default(USER)
  password String
  name     String?
  lastname String?
  phone    String?
  address  Address[]
  Cart     Cart[]
  Opinion  Opinion[]
  Order    Order[]
}

model Address {
  user          User    @relation(fields: [userEmail], references: [email])
  userEmail     String  @unique
  wojewodztwo   String
  powiat        String
  miejscowosc   String
  ulica         String?
  nr_mieszkania String
  kod_pocztowy  String
}

enum Role {
  USER
  ADMIN
}

model Category {
  id      String    @id @default(uuid())
  name    String
  Product Product[]
}

model Cart {
  id        String  @id @default(uuid())
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  product   Product @relation(fields: [productId], references: [id])
  productId String
}

model Product {
  id          String       @id @default(uuid())
  category    Category?    @relation(fields: [categoryId], references: [id])
  categoryId  String?
  producent   Producent    @relation(fields: [producentId], references: [id])
  producentId String
  title       String
  description String       @db.VarChar(65535)
  price       Float
  image       String
  type        Int          @default(1)
  dlc         Product?     @relation("DLCRelation", fields: [dlcId], references: [id])
  dlcId       String?
  Cart        Cart[]
  Exhibition  Exhibition[]
  Opinion     Opinion[]
  dlcOf       Product[]    @relation("DLCRelation")
}

model Producent {
  id      String    @id @default(uuid())
  name    String
  Product Product[]
}

model Exhibition {
  id        String  @id @default(uuid())
  product   Product @relation(fields: [productId], references: [id])
  productId String
  image     String
}

model Opinion {
  id        String  @id @default(uuid())
  author    User    @relation(fields: [authorId], references: [id])
  authorId  String
  product   Product @relation(fields: [productId], references: [id])
  productId String
  rating    Int
  title     String
  content   String
}

model Order {
  id       Int      @id @default(autoincrement())
  user     User     @relation(fields: [userId], references: [id])
  userId   String
  products String   @db.VarChar(65535)
  cost     Float
  status   Status   @default(IN_PROGRESS)
  date     DateTime @default(now())
}

enum Status {
  IN_PROGRESS
  ORDERED
}
